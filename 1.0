$ErrorActionPreference = "Stop"

# Ruta del Excel en red (ajusta a tu caso)
$file = "O:\ADP_SP\Clientes_Bob_LOPD\J18_ANCERT\01. Documentaci√≥n Implantaci√≥n\03.-ANALISIS\J18-Blueprint_v6.1 validado 09102025.xlsx"
$literal = "embargo"

try {
    $excel = New-Object -ComObject Excel.Application
    $excel.Visible = $false
    $excel.DisplayAlerts = $false

    Write-Host "üìÑ Abriendo Excel (solo lectura): $file" -ForegroundColor Cyan
    $wb = $excel.Workbooks.Open($file, 0, $true)  # read-only

    # Buscar hoja que contenga "analisis" y "conceptos"
    $sheet = $null
    foreach ($sh in $wb.Worksheets) {
        $name = $sh.Name.ToLower()
        if ($name -match "analisis" -and $name -match "concept") {
            $sheet = $sh
            break
        }
    }

    if (-not $sheet) {
        Write-Host "‚ùå No se encontr√≥ la hoja de An√°lisis Conceptos" -ForegroundColor Red
    } else {
        Write-Host "‚úÖ Analizando hoja: $($sheet.Name)" -ForegroundColor Green
        $usedRange = $sheet.UsedRange
        $values = $usedRange.Value2

        $found = $false
        for ($r = 1; $r -le $values.GetLength(0); $r++) {
            for ($c = 1; $c -le $values.GetLength(1); $c++) {
                $val = $values[$r, $c]
                if ($null -ne $val -and ($val.ToString().ToLower() -like "*$literal*")) {
                    Write-Host "‚úÖ Literal '$literal' encontrado en $($sheet.Name)!  Celda: R$r C$c" -ForegroundColor Green
                    $found = $true
                }
            }
        }

        if (-not $found) {
            Write-Host "‚ö™ No se encontr√≥ el literal '$literal' en la hoja." -ForegroundColor Gray
        }
    }

    $wb.Close($false)
}
catch {
    Write-Host "‚ö†Ô∏è Error: $($_.Exception.Message)" -ForegroundColor Yellow
}
finally {
    if ($excel) { $excel.Quit(); [System.Runtime.InteropServices.Marshal]::ReleaseComObject($excel) | Out-Null }
}