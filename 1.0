# ============================================
# Fusionar hojas "An√°lisis Conceptos" (versi√≥n estable para todo tipo de Excel)
# ============================================

# === CONFIGURACI√ìN ===
$carpetaOrigen   = "C:\Ruta\A\TusExcels"              
$ficheroSalida   = "C:\Users\Javier\Pruebas\Base_Datos.xlsx"
$nombreHojaFinal = "Consolidado"

# === ARRANQUE ===
Add-Type -AssemblyName Microsoft.Office.Interop.Excel
$excel = New-Object -ComObject Excel.Application
$excel.Visible = $false
$excel.DisplayAlerts = $false

$wbFinal = $excel.Workbooks.Add()
$wsFinal = $wbFinal.Sheets.Item(1)
$wsFinal.Name = $nombreHojaFinal
$filaDestino = 1

$archivos = Get-ChildItem -Path $carpetaOrigen -Filter *.xls* -File -Recurse
Write-Host "üìÇ Procesando $($archivos.Count) archivos..."

foreach ($archivo in $archivos) {
    try {
        $wb = $excel.Workbooks.Open($archivo.FullName, $false, $true)
        $hoja = $null

        foreach ($h in $wb.Sheets) {
            if ($h.Name -match '(?i)an[a√°]lisis\s*conceptos?') {
                $hoja = $h
                break
            }
        }

        if ($hoja -eq $null) {
            Write-Host "‚ö†Ô∏è Hoja no encontrada en $($archivo.Name)"
            $wb.Close($false)
            continue
        }

        # Detectar √∫ltima fila/columna v√°lida
        $ultimaCelda = $hoja.Cells.Find("*")
        if ($ultimaCelda -eq $null) {
            Write-Host "‚ö†Ô∏è Hoja vac√≠a en $($archivo.Name)"
            $wb.Close($false)
            continue
        }

        $ultimaFila = $ultimaCelda.Row
        $ultimaCol = $hoja.Cells.Find("*", $null, $null, $null, 2, 2).Column

        # Buscar fila de inicio
        $filaInicio = 1
        for ($i = 1; $i -le [Math]::Min(10, $ultimaFila); $i++) {
            $textoFila = ($hoja.Range("A$i:X$i").Text -join " ") -replace '\s+', ' '
            if ($textoFila -match '(?i)(c[o√≥]digo\s*adp|utilizar\s*cliente|c[o√≥]digo\s*cliente)') {
                $filaInicio = $i
                break
            }
        }

        # Comprobar rango v√°lido
        if ($ultimaFila -lt $filaInicio) {
            Write-Host "‚ö†Ô∏è Sin datos v√°lidos en $($archivo.Name)"
            $wb.Close($false)
            continue
        }

        # Detectar si empieza en columna A o B
        $colInicio = 1
        $primeraCelda = $hoja.Cells.Item($filaInicio,1).Text
        if ([string]::IsNullOrWhiteSpace($primeraCelda)) { $colInicio = 2 }

        # Crear rango origen con control de tipo
        $rangoOrigen = $null
        try {
            $rangoOrigen = $hoja.Range($hoja.Cells.Item($filaInicio, $colInicio),
                                       $hoja.Cells.Item($ultimaFila, $ultimaCol))
        } catch {
            Write-Host "‚ö†Ô∏è No se pudo definir rango en $($archivo.Name): $($_.Exception.Message)"
        }

        if ($rangoOrigen -eq $null) {
            $wb.Close($false)
            continue
        }

        # Copiar con formato, dentro de try
        try {
            $rangoOrigen.Copy()
            $destino = $wsFinal.Cells.Item($filaDestino, 2)
            $wsFinal.Paste($destino)
            try { [void]$excel.Range("A1").Select() } catch {}
        } catch {
            Write-Host "‚ö†Ô∏è Error al copiar $($archivo.Name): $($_.Exception.Message)"
            $wb.Close($false)
            continue
        }

        # A√±adir nombre de archivo
        $colArchivo = $ultimaCol + 2
        $wsFinal.Cells.Item($filaDestino, $colArchivo) = "ArchivoOrigen"
        $filasPegadas = $rangoOrigen.Rows.Count
        for ($i = 2; $i -le $filasPegadas; $i++) {
            $wsFinal.Cells.Item($filaDestino + $i - 1, $colArchivo) = $archivo.Name
        }

        $filaDestino += $filasPegadas + 1
        $wb.Close($false)
    }
    catch {
        Write-Host "‚ùå Error procesando $($archivo.Name): $($_.Exception.Message)"
        try { $wb.Close($false) } catch {}
    }
}

# === ELIMINAR DUPLICADOS (si hay datos) ===
try {
    $ultimaCeldaFinal = $wsFinal.Cells.Find("*")
    if ($ultimaCeldaFinal -ne $null) {
        $ultimaFilaFinal = $ultimaCeldaFinal.Row
        $ultimaColFinal = $wsFinal.Cells.Find("*", $null, $null, $null, 2, 2).Column
        $rangoFinal = $wsFinal.Range($wsFinal.Cells.Item(1,1), $wsFinal.Cells.Item($ultimaFilaFinal, $ultimaColFinal))
        $rangoFinal.RemoveDuplicates(1..$ultimaColFinal, 1) | Out-Null

        # Activar autofiltro y bloquear fila 1
        $rangoFinal.Rows.Item(1).AutoFilter()
        $excel.ActiveWindow.SplitRow = 1
        $excel.ActiveWindow.FreezePanes = $true
    }
} catch {
    Write-Host "‚ö†Ô∏è No se pudieron eliminar duplicados o aplicar filtros: $($_.Exception.Message)"
}

# === GUARDAR Y CERRAR ===
Start-Sleep -Seconds 2
try {
    $wbFinal.SaveAs($ficheroSalida)
    Write-Host "‚úÖ Consolidado generado en: $ficheroSalida"
} catch {
    Write-Host "‚ö†Ô∏è Error al guardar archivo final: $($_.Exception.Message)"
}
try { $wbFinal.Close($true) } catch {}
try { $excel.Quit() } catch {}

Write-Host "üèÅ Proceso completado."