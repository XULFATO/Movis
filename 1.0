# --- RANGO A LEER ---
$rango = $hoja.Range($hoja.Cells.Item($filaInicio, 1), $hoja.Cells.Item($ultimaFila, $ultimaCol))

# === MODO RÁPIDO (Value2) ===
$valores = $null
$fastOk = $true
try {
    $valores = $rango.Value2
    # Normaliza a 2D: si es celda única, lo convierto en matriz 1x1
    if ($valores -ne $null -and -not ($valores -is [Object[,]))) {
        $tmp = New-Object 'object[,]' 1,1
        $tmp[0,0] = $valores
        $valores = $tmp
    }
} catch {
    $fastOk = $false
}

if ($fastOk -and $valores -ne $null) {
    # --- VOLCADO (rápido) ---
    $rows = $valores.GetLength(0)
    $cols = $valores.GetLength(1)
    for ($r=0; $r -lt $rows; $r++) {
        # salta filas completamente vacías
        $vline = @()
        $todoVacio = $true
        for ($c=0; $c -lt $cols; $c++) {
            $v = $valores[$r,$c]
            if ($v -ne $null -and "$v".Trim().Length -gt 0) { $todoVacio = $false }
            $vline += $v
        }
        if ($todoVacio) { continue }

        $colDest = 2  # siempre desde columna B
        foreach ($cel in $vline) {
            $wsFinal.Cells.Item($filaDestino, $colDest) = $cel
            $colDest++
        }
        # ArchivoOrigen al final
        $wsFinal.Cells.Item($filaDestino, $colDest) = $archivo.Name
        $filaDestino++
    }
}
else {
    # === MODO SEGURO (lento, pero incluye TODO) ===
    try {
        for ($r=$filaInicio; $r -le $ultimaFila; $r++) {
            # Comprueba si la fila está vacía
            $filaVacia = $true
            for ($c=1; $c -le $ultimaCol; $c++) {
                $txt = $hoja.Cells.Item($r,$c).Text
                if (-not [string]::IsNullOrWhiteSpace($txt)) { $filaVacia = $false; break }
            }
            if ($filaVacia) { continue }

            # Vuelca celda a celda usando .Text
            $colDest = 2  # empezar en B
            for ($c=1; $c -le $ultimaCol; $c++) {
                $wsFinal.Cells.Item($filaDestino, $colDest) = $hoja.Cells.Item($r,$c).Text
                $colDest++
            }
            # ArchivoOrigen
            $wsFinal.Cells.Item($filaDestino, $colDest) = $archivo.Name
            $filaDestino++
        }
    } catch {
        Write-Host "⚠️ Modo seguro también falló en $($archivo.Name): $($_.Exception.Message)"
    }
}