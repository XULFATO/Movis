$ErrorActionPreference = "Stop"

# === CONFIGURA ===
$path = "C:\Users\Joquina\OneDrive - Automatic Data Processing Inc\Escritorio\PRUEBA\123_PRUEBE\123\01. Documentaci√≥n Implantaci√≥n\ANALISIS\J18-Blueprint_v6.1_validado_09102025.xlsx"
$literal = "embargo"

# === FUNCIONES ===
function Remove-Diacritics([string]$s) {
    if ([string]::IsNullOrWhiteSpace($s)) { return "" }
    $d = $s.Normalize([Text.NormalizationForm]::FormD)
    ($d.ToCharArray() | Where-Object {
        [Globalization.CharUnicodeInfo]::GetUnicodeCategory($_) -ne [Globalization.UnicodeCategory]::NonSpacingMark
    }) -join ''
}
function Normalize([string]$s) { (Remove-Diacritics $s).ToLowerInvariant().Trim() }

# === INICIO ===
Write-Host "`nüìò Analizando Excel REAL (v√≠a COM)...`n" -ForegroundColor Cyan
$excel = New-Object -ComObject Excel.Application
$excel.Visible = $false
$excel.DisplayAlerts = $false

try {
    $wb = $excel.Workbooks.Open($path, $false, $true)
    $found = 0
    foreach ($ws in $wb.Worksheets) {
        $vals = $ws.UsedRange.Value2
        if ($null -eq $vals) { continue }

        foreach ($cell in $vals) {
            if ($null -eq $cell) { continue }
            $text = Normalize ([string]$cell)
            if ($text -match (Normalize $literal)) {
                Write-Host ("‚úÖ Hoja '{0}' contiene: {1}" -f $ws.Name, $cell) -ForegroundColor Green
                $found++
            }
        }
    }

    if ($found -eq 0) {
        Write-Host "‚ùå No se encontr√≥ '$literal' en el Excel (ni visible ni interno)." -ForegroundColor Red
    }
}
catch {
    Write-Host "‚ö†Ô∏è Error: $($_.Exception.Message)" -ForegroundColor Yellow
}
finally {
    $wb.Close($false)
    $excel.Quit()
    [System.Runtime.InteropServices.Marshal]::ReleaseComObject($excel) | Out-Null
}