<!DOCTYPE html><html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>¿Estoy en Movistar, Orange o Vodafone?</title>
  <style>
    :root{
      --bg:#0f172a; /* slate-900 */
      --panel:#111827; /* gray-900 */
      --text:#e5e7eb; /* gray-200 */
      --muted:#9ca3af; /* gray-400 */
      --ok:#22c55e;   /* green-500 */
      --warn:#f59e0b; /* amber-500 */
      --bad:#ef4444;  /* red-500 */
      --chip:#1f2937; /* gray-800 */
      --link:#60a5fa; /* blue-400 */
    }
    html,body{height:100%}
    body{margin:0;background:linear-gradient(180deg,var(--bg),#0b1229);color:var(--text);font-family:system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,"Helvetica Neue",Arial,sans-serif;display:flex;align-items:center;justify-content:center}
    .card{width:min(900px,94vw);padding:24px;border-radius:18px;background:radial-gradient(1200px 600px at 10% -10%,#1f2937,transparent),var(--panel);box-shadow:0 10px 30px rgba(0,0,0,.35);}
    h1{margin:0 0 8px;font-size:clamp(22px,3vw,30px)}
    p.sub{margin-top:0;color:var(--muted)}
    .row{display:flex;gap:14px;flex-wrap:wrap;align-items:center}
    .field{display:flex;align-items:center;gap:10px;background:#0b1020;border:1px solid #233053;border-radius:12px;padding:10px 12px}
    input[type=number]{width:90px;background:transparent;color:var(--text);border:none;outline:none;font-size:16px}
    button{cursor:pointer;border:none;border-radius:12px;padding:10px 14px;background:#1e293b;color:var(--text);font-weight:600}
    button:hover{filter:brightness(1.1)}
    .chips{display:flex;gap:8px;flex-wrap:wrap;margin-top:14px}
    .chip{background:var(--chip);padding:8px 10px;border-radius:999px;font-size:14px;border:1px solid #2a3858}
    .status{margin-top:16px;border-radius:14px;padding:14px;border:1px dashed #2a3858;background:#0c1326}
    .status h2{margin:0 0 8px;font-size:18px}
    .grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(220px,1fr));gap:10px;margin-top:12px}
    .k{color:var(--muted)}
    .badge{display:inline-block;padding:4px 10px;border-radius:10px;font-size:12px;font-weight:700}
    .ok{background:rgba(34,197,94,.15);border:1px solid rgba(34,197,94,.35)}
    .warn{background:rgba(245,158,11,.15);border:1px solid rgba(245,158,11,.35)}
    .bad{background:rgba(239,68,68,.15);border:1px solid rgba(239,68,68,.35)}
    .footer{margin-top:18px;color:var(--muted);font-size:13px}
    .banner{margin-top:12px;padding:12px;border-radius:12px}
  </style>
</head>
<body>
  <div class="card">
    <h1>Comprobar operador actual (Movistar / Orange / Vodafone)</h1>
    <p class="sub">Esta página consulta tu <strong>IP pública</strong> y el <strong>ISP</strong> detectado para decirte si estás en Movistar (Telefónica), Orange o Vodafone. Funciona con datos móviles o Wi‑Fi, sin instalar nada.</p><div class="row" aria-label="Controles">
  <div class="field">
    <label for="interval">Refrescar cada</label>
    <input id="interval" type="number" min="3" value="15" />
    <span>seg</span>
  </div>
  <button id="apply">Aplicar</button>
  <button id="refresh">Refrescar ahora</button>
  <span id="tick" class="chip" title="Próxima comprobación">⏱️ siguiente en –</span>
</div>

<div class="chips">
  <span id="status-badge" class="badge warn">Estado: –</span>
  <span id="last" class="chip">Última comprobación: –</span>
</div>

<div id="banner" class="banner" hidden></div>

<div class="status">
  <h2>Resultado</h2>
  <div class="grid">
    <div><span class="k">IP pública:</span> <span id="ip">–</span></div>
    <div><span class="k">ISP / Operador:</span> <span id="isp">–</span></div>
    <div><span class="k">Organización:</span> <span id="org">–</span></div>
    <div><span class="k">ASN:</span> <span id="asn">–</span></div>
    <div><span class="k">País:</span> <span id="country">–</span></div>
    <div><span class="k">Coincidencia:</span> <span id="match">–</span></div>
  </div>
</div>

<div class="footer">
  Fuente de datos: <span>ipwho.is</span> (con fallback a <span>ipapi.co</span>). Tu navegador hace la consulta directamente; no se envía nada a servidores intermedios.
</div>

  </div><script>
(function(){
  const els = {
    ip: document.getElementById('ip'),
    isp: document.getElementById('isp'),
    org: document.getElementById('org'),
    asn: document.getElementById('asn'),
    country: document.getElementById('country'),
    match: document.getElementById('match'),
    last: document.getElementById('last'),
    statusBadge: document.getElementById('status-badge'),
    interval: document.getElementById('interval'),
    apply: document.getElementById('apply'),
    refresh: document.getElementById('refresh'),
    tick: document.getElementById('tick'),
    banner: document.getElementById('banner')
  };

  const MOVISTAR_RE = /(movistar|telef[óo]nica)/i; // Telefónica/Movistar
  const ORANGE_RE   = /orange/i;
  const VODAFONE_RE = /vodafone/i;

  function classify(providerStr){
    if(!providerStr) return {label:'Desconocido', code:'unknown'};
    if(MOVISTAR_RE.test(providerStr)) return {label:'Movistar (Telefónica)', code:'movistar'};
    if(ORANGE_RE.test(providerStr))   return {label:'Orange', code:'orange'};
    if(VODAFONE_RE.test(providerStr)) return {label:'Vodafone', code:'vodafone'};
    return {label:'Otro', code:'other'};
  }

  function setBadge(code, text){
    const c = els.statusBadge.classList;
    c.remove('ok','warn','bad');
    if(code==='movistar') c.add('ok');
    else if(code==='other') c.add('warn');
    else c.add('warn');
    els.statusBadge.textContent = 'Estado: ' + text;
  }

  function showBanner(code){
    const b = els.banner;
    b.hidden = false;
    if(code==='movistar'){
      b.style.background = 'rgba(34,197,94,.15)';
      b.style.border = '1px solid rgba(34,197,94,.35)';
      b.textContent = '✅ Estás en Movistar (Telefónica).';
    } else if(code==='orange'){
      b.style.background = 'rgba(245,158,11,.15)';
      b.style.border = '1px solid rgba(245,158,11,.35)';
      b.textContent = '⚠️ Estás en Orange (no Movistar).';
    } else if(code==='vodafone'){
      b.style.background = 'rgba(245,158,11,.15)';
      b.style.border = '1px solid rgba(245,158,11,.35)';
      b.textContent = '⚠️ Estás en Vodafone (no Movistar).';
    } else {
      b.style.background = 'rgba(245,158,11,.15)';
      b.style.border = '1px solid rgba(245,158,11,.35)';
      b.textContent = 'ℹ️ Estás en otro proveedor (no Movistar).';
    }
  }

  async function queryIpwho(){
    const r = await fetch('https://ipwho.is/');
    if(!r.ok) throw new Error('ipwho.is HTTP '+r.status);
    const j = await r.json();
    // ipwho.is keys
    const ip = j.ip;
    const country = j.country ? (j.country + (j.region ? (', '+j.region) : '')) : '-';
    const isp = (j.connection && (j.connection.isp || j.connection.org)) || j.org || j.isp || '';
    const org = (j.connection && (j.connection.org || j.connection.isp)) || j.org || '';
    const asn = (j.connection && j.connection.asn) || j.asn || '';
    return {ip, country, isp, org, asn};
  }

  async function queryIpapi(){
    const r = await fetch('https://ipapi.co/json/');
    if(!r.ok) throw new Error('ipapi.co HTTP '+r.status);
    const j = await r.json();
    const ip = j.ip;
    const country = j.country_name || '';
    const isp = j.org || j.asn || j.company || '';
    const org = j.org || '';
    const asn = j.asn || '';
    return {ip, country, isp, org, asn};
  }

  async function check(){
    setBadge('checking','Comprobando…');
    els.banner.hidden = true;
    try{
      let data;
      try{
        data = await queryIpwho();
      } catch(e){
        data = await queryIpapi();
      }
      const providerStr = [data.isp, data.org].filter(Boolean).join(' ');
      const cls = classify(providerStr);

      els.ip.textContent = data.ip || '–';
      els.country.textContent = data.country || '–';
      els.isp.textContent = data.isp || '–';
      els.org.textContent = data.org || '–';
      els.asn.textContent = data.asn || '–';
      els.match.textContent = cls.label;

      setBadge(cls.code, 'Conectado');
      showBanner(cls.code);
      els.last.textContent = 'Última comprobación: ' + new Date().toLocaleString();
    } catch(err){
      setBadge('bad','Error');
      els.banner.hidden = false;
      els.banner.style.background = 'rgba(239,68,68,.15)';
      els.banner.style.border = '1px solid rgba(239,68,68,.35)';
      els.banner.textContent = 'No se pudo consultar el ISP. Revisa tu conexión a Internet.';
      console.error(err);
    }
  }

  // Auto‑refresco
  let timer = null;
  let nextIn = 0;

  function startTimer(){
    if(timer) clearInterval(timer);
    const sec = Math.max(3, Number(els.interval.value)||15);
    localStorage.setItem('refreshSec', String(sec));
    nextIn = sec;
    els.tick.textContent = `⏱️ siguiente en ${nextIn}s`;
    timer = setInterval(()=>{
      nextIn -= 1;
      if(nextIn <= 0){
        check();
        nextIn = sec;
      }
      els.tick.textContent = `⏱️ siguiente en ${nextIn}s`;
    },1000);
  }

  // Eventos
  els.apply.addEventListener('click', startTimer);
  els.refresh.addEventListener('click', ()=>{ check(); nextIn = Math.max(3, Number(els.interval.value)||15); });

  // Inicialización
  const saved = Number(localStorage.getItem('refreshSec'));
  if(saved && saved >= 3){ els.interval.value = saved; }
  check();
  startTimer();
})();
</script></body>
</html>
