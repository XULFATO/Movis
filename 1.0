$ErrorActionPreference = "Stop"
Add-Type -AssemblyName System.IO.Compression.FileSystem

# === Configura ===
$path = "C:\Users\Joquina\OneDrive - Automatic Data Processing Inc\Escritorio\PRUEBA\123_PRUEBE\123\01. Documentación Implantación\ANALISIS\J18-Blueprint_v6.1_validado_09102025.xlsx"
$literal = "embargo"

# === Funciones ===
function Remove-Diacritics([string]$s) {
    $d = $s.Normalize([Text.NormalizationForm]::FormD)
    ($d.ToCharArray() | Where-Object {
        [Globalization.CharUnicodeInfo]::GetUnicodeCategory($_) -ne [Globalization.UnicodeCategory]::NonSpacingMark
    }) -join ''
}
function Normalize([string]$s) {
    $s = $s -replace '\s+', ' '
    $s = $s -replace '[\u0000-\u001F]', ''
    (Remove-Diacritics $s).ToLowerInvariant().Trim()
}

# === Descomprimir ===
$tmpDir = [System.IO.Path]::Combine([System.IO.Path]::GetTempPath(), [System.IO.Path]::GetRandomFileName())
[System.IO.Compression.ZipFile]::ExtractToDirectory($path, $tmpDir)

$sheetFiles = Get-ChildItem "$tmpDir\xl\worksheets" -File -ErrorAction SilentlyContinue
$found = 0

foreach ($sf in $sheetFiles) {
    $content = Get-Content $sf.FullName -Raw
    $clean = Normalize ($content -replace "<[^>]+>", " ")
    if ($clean -match (Normalize $literal)) {
        Write-Host "✅ Encontrado en hoja: $($sf.Name)" -ForegroundColor Green
        $found++
    }
}

if ($found -eq 0) {
    Write-Host "❌ No se encontró '$literal' en ninguna hoja." -ForegroundColor Red
}

Remove-Item -Path $tmpDir -Recurse -Force -ErrorAction SilentlyContinue