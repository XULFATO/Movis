# ==========================================================
# FUSIONAR "AN√ÅLISIS CONCEPTOS"  ‚Äì  versi√≥n robusta y limpia
# ==========================================================

# --- CONFIGURACI√ìN ---
$carpetaOrigen   = "C:\Ruta\A\TusExcels"              # <-- cambia esta ruta
$ficheroSalida   = "C:\Users\Javier\Pruebas\Base_Datos.xlsx"
$nombreHojaFinal = "Consolidado"

# --- ARRANQUE ---
Add-Type -AssemblyName Microsoft.Office.Interop.Excel
$excel     = New-Object -ComObject Excel.Application
$excel.Visible       = $false
$excel.DisplayAlerts = $false

$wbFinal  = $excel.Workbooks.Add()
$wsFinal  = $wbFinal.Sheets.Item(1)
$wsFinal.Name = $nombreHojaFinal
$filaDestino  = 1

$archivos = Get-ChildItem -Path $carpetaOrigen -Filter *.xls* -File -Recurse
$total = $archivos.Count
Write-Host "üìÇ Procesando $total archivos..."

foreach ($archivo in $archivos) {
    try {
        $wb = $excel.Workbooks.Open($archivo.FullName, $false, $true)
        $hoja = $null
        foreach ($h in $wb.Sheets) {
            if ($h.Name -match '(?i)an[a√°]lisis\s*conceptos?') { $hoja = $h; break }
        }

        if ($hoja -eq $null) {
            Write-Host "‚ö†Ô∏è Hoja no encontrada en $($archivo.Name)"
            $wb.Close($false)
            continue
        }

        # --- Rango usado (sin errores COM) ---
        $used = $hoja.UsedRange
        if ($used -eq $null -or $used.Rows.Count -eq 0) {
            Write-Host "‚ö†Ô∏è Hoja vac√≠a en $($archivo.Name)"
            $wb.Close($false)
            continue
        }

        $ultimaFila = $used.Rows.Count
        $ultimaCol  = $used.Columns.Count

        # --- Buscar fila de encabezado ---
        $filaInicio = 1
        for ($i=1; $i -le [Math]::Min(10,$ultimaFila); $i++) {
            $texto = ($hoja.Range("A$i:X$i").Text -join " ") -replace '\s+',' '
            if ($texto -match '(?i)(c[o√≥]digo\s*adp|utilizar\s*cliente|c[o√≥]digo\s*cliente)') { 
                $filaInicio = $i; break 
            }
        }

        # --- Leer todos los valores ---
        $rango = $hoja.Range($hoja.Cells.Item($filaInicio,1),$hoja.Cells.Item($ultimaFila,$ultimaCol))
        $valores = $null
        try { $valores = $rango.Value2 } catch { $valores = $null }

        if ($valores -eq $null) {
            Write-Host "‚ö†Ô∏è Modo seguro en $($archivo.Name)"
            for ($r=$filaInicio; $r -le $ultimaFila; $r++) {
                $vacia = $true
                for ($c=1; $c -le $ultimaCol; $c++) {
                    $txt = $hoja.Cells.Item($r,$c).Text
                    if (-not [string]::IsNullOrWhiteSpace($txt)) { $vacia=$false; break }
                }
                if ($vacia) { continue }

                $colDest=2
                for ($c=1; $c -le $ultimaCol; $c++) {
                    $wsFinal.Cells.Item($filaDestino,$colDest) = $hoja.Cells.Item($r,$c).Text
                    $colDest++
                }
                $wsFinal.Cells.Item($filaDestino,$colDest) = $archivo.Name
                $filaDestino++
            }
        }
        else {
            # --- Escribir valores r√°pidos ---
            $rows=$valores.GetLength(0)
            $cols=$valores.GetLength(1)
            for ($r=0; $r -lt $rows; $r++) {
                $todoVacio=$true
                for ($c=0; $c -lt $cols; $c++) {
                    $v=$valores[$r,$c]
                    if ($v -ne $null -and "$v".Trim().Length -gt 0) { $todoVacio=$false; break }
                }
                if ($todoVacio) { continue }

                $colDest=2
                for ($c=0; $c -lt $cols; $c++) {
                    $wsFinal.Cells.Item($filaDestino,$colDest) = $valores[$r,$c]
                    $colDest++
                }
                $wsFinal.Cells.Item($filaDestino,$colDest) = $archivo.Name
                $filaDestino++
            }
        }

        $wb.Close($false)
    }
    catch {
        Write-Host "‚ùå Error procesando $($archivo.Name): $($_.Exception.Message)"
        try { $wb.Close($false) } catch {}
    }
}

# --- ELIMINAR DUPLICADOS Y FILTRO ---
try {
    $ultimaCelda = $wsFinal.Cells.Find("*")
    if ($ultimaCelda -ne $null) {
        $ultimaFila = $ultimaCelda.Row
        $ultimaCol  = $wsFinal.Cells.Find("*",$null,$null,$null,2,2).Column
        $rangoFin   = $wsFinal.Range($wsFinal.Cells.Item(1,1),$wsFinal.Cells.Item($ultimaFila,$ultimaCol))
        $rangoFin.RemoveDuplicates(1..$ultimaCol,1) | Out-Null
        $rangoFin.Rows.Item(1).AutoFilter()
        $excel.ActiveWindow.SplitRow = 1
        $excel.ActiveWindow.FreezePanes = $true
    }
} catch {
    Write-Host "‚ö†Ô∏è No se pudieron eliminar duplicados o aplicar filtros: $($_.Exception.Message)"
}

# --- GUARDAR Y CERRAR ---
Start-Sleep -Seconds 1
try {
    $wbFinal.SaveAs($ficheroSalida)
    Write-Host "‚úÖ Consolidado generado en: $ficheroSalida"
} catch {
    Write-Host "‚ö†Ô∏è Error al guardar archivo final: $($_.Exception.Message)"
}
try { $wbFinal.Close($true) } catch {}
try { $excel.Quit() } catch {}

Write-Host "üèÅ Proceso completado. Todos los Excels incluidos correctamente."