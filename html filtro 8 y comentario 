<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <title>Tabla filtrable con comentarios (+)</title>
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <style>
    :root {
      --bg:#f6f8fa;
      --ink:#1a1d21;
      --muted:#666;
      --line:#dcdfe4;
      --head:#2c3e50;
      --headInk:#fff;
      --active:#0b6efd;
      --highlight:#eef5ff;
    }

    body {
      font-family: "Segoe UI", Arial, sans-serif;
      margin: 24px;
      background: var(--bg);
      color: var(--ink);
    }

    h2 {
      margin: 0 0 8px;
      color: #0b3a8a;
    }

    .meta {
      font-size: 13px;
      color: var(--muted);
      margin-bottom: 18px;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      background: #fff;
      box-shadow: 0 2px 10px rgba(0,0,0,.05);
      border-radius: 6px;
      overflow: hidden;
    }

    th, td {
      padding: 8px 10px;
      border-bottom: 1px solid var(--line);
      text-align: left;
      font-size: 14px;
      vertical-align: top;
    }

    thead th {
      background: var(--head);
      color: var(--headInk);
      position: sticky;
      top: 44px;
      z-index: 1;
    }

    thead tr:first-child th {
      background: #fff;
      color: var(--ink);
      position: sticky;
      top: 0;
      z-index: 2;
    }

    thead input {
      width: 100%;
      box-sizing: border-box;
      padding: 6px 8px;
      border: 1px solid var(--line);
      border-radius: 5px;
      outline: none;
      transition: box-shadow .15s, border-color .15s;
    }

    thead input:focus {
      border-color: var(--active);
      box-shadow: 0 0 0 3px rgba(11,110,253,.15);
    }

    thead input.active {
      color: var(--active);
      font-weight: 600;
    }

    tbody tr:nth-child(even) td { background: #fafafa; }
    mark { background: none; color: var(--active); font-weight: 700; }

    /* s√≠mbolo + y - para desplegar */
    .plus-btn {
      cursor: pointer;
      font-weight: bold;
      color: var(--active);
      text-align: center;
      font-size: 18px;
      width: 24px;
    }
    .plus-btn:hover {
      background: var(--highlight);
      border-radius: 4px;
    }

    /* comentario expandido */
    .comment-row td {
      background: #f9fbff;
      border-left: 3px solid var(--active);
      color: #333;
      font-size: 13px;
      animation: fadeIn .25s ease;
    }

    .comment-row div {
      padding: 8px 12px;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-3px); }
      to { opacity: 1; transform: translateY(0); }
    }

    .actions { margin-bottom: 10px; }
    .actions button {
      padding: 6px 10px;
      border: 1px solid var(--active);
      background: var(--active);
      color: #fff;
      border-radius: 6px;
      cursor: pointer;
      font-size: 14px;
    }

    .status { font-size: 12px; color: var(--muted); margin-top: 10px; }
  </style>
</head>
<body>
  <h2>Tabla filtrable con comentarios desplegables (+)</h2>
  <div class="meta">
    ‚ûï Usa <b>+palabra</b> para buscar exacto, <b>-palabra</b> para excluir.<br>
    üîç Clic en el s√≠mbolo <b>+</b> para ver el comentario del elemento (si lo tiene).
  </div>

  <div class="actions">
    <button onclick="clearAllFilters()">üßº Borrar todos los filtros</button>
  </div>

  <table>
    <thead>
      <tr>
        <th><input id="f0" list="dl0" placeholder="Tabla" oninput="handleType(0,this)"><datalist id="dl0"></datalist></th>
        <th><input id="f1" list="dl1" placeholder="Descripci√≥n" oninput="handleType(1,this)"><datalist id="dl1"></datalist></th>
        <th><input id="f2" list="dl2" placeholder="Cod elemento" oninput="handleType(2,this)"><datalist id="dl2"></datalist></th>
        <th><input id="f3" list="dl3" placeholder="Descripci√≥n" oninput="handleType(3,this)"><datalist id="dl3"></datalist></th>
        <th><input id="f4" list="dl4" placeholder="Enlace" oninput="handleType(4,this)"><datalist id="dl4"></datalist></th>
        <th><input id="f5" list="dl5" placeholder="Posici√≥n" oninput="handleType(5,this)"><datalist id="dl5"></datalist></th>
        <th><input id="f6" list="dl6" placeholder="Formato" oninput="handleType(6,this)"><datalist id="dl6"></datalist></th>
        <th><input id="f7" list="dl7" placeholder="Euro" oninput="handleType(7,this)"><datalist id="dl7"></datalist></th>
      </tr>
      <tr>
        <th>Tabla</th>
        <th>Descripci√≥n</th>
        <th>Cod elemento</th>
        <th>Descripci√≥n</th>
        <th>Enlace</th>
        <th>Posici√≥n</th>
        <th>Formato</th>
        <th>Euro</th>
      </tr>
    </thead>
    <tbody id="tbody"></tbody>
  </table>

  <div class="status" id="status"></div>

  <script>
    // Datos de ejemplo (columna 9 = comentario)
    const data = [
      ["TAB001","Motor","C123","Bloque completo","enlace1.htm","A1","TXT","1000‚Ç¨","Solo disponible en modelos 2023."],
      ["TAB002","Puerta","C456","3 puertas","enlace2.htm","B3","TXT","450‚Ç¨","Incluye cerradura reforzada."],
      ["TAB003","Ventana","C789","Cristal templado","enlace3.htm","C5","HTML","230‚Ç¨",""],
      ["TAB004","Techo","C012","Techo solar","enlace4.htm","D7","TXT","890‚Ç¨","Entrega en 2 semanas."],
      ["TAB005","Asiento","C999","Cuero premium","enlace5.htm","E9","TXT","1200‚Ç¨","Disponible en color negro o beige."]
    ];

    const COLS = 8;
    const inputs = [...document.querySelectorAll('thead input')];
    const filters = Array(COLS).fill('');
    const tbody = document.getElementById('tbody');
    const statusEl = document.getElementById('status');
    const MAX_SUGGESTIONS = 500;

    function rowMatches(row, ignoreCol=-1){
      for(let i=0;i<COLS;i++){
        if(i===ignoreCol) continue;
        const f=filters[i]; if(!f) continue;
        const parts=f.split(/\s+/).filter(Boolean);
        const cell=String(row[i]).toLowerCase();
        for(const p of parts){
          if(p.startsWith('+')){ if(!cell.includes(p.slice(1))) return false; }
          else if(p.startsWith('-')){ if(cell.includes(p.slice(1))) return false; }
          else if(!cell.includes(p)) return false;
        }
      }
      return true;
    }

    function highlightText(text,col){
      const f=filters[col]; if(!f) return text;
      let result=text;
      const parts=f.split(/\s+/).filter(Boolean).filter(p=>!p.startsWith('-'));
      for(const p of parts){
        const term=p.startsWith('+')?p.slice(1):p;
        if(!term) continue;
        const re=new RegExp(`(${term.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")})`,"gi");
        result=result.replace(re,"<mark>$1</mark>");
      }
      return result;
    }

    function toggleCommentRow(tr,txt,btn){
      const next=tr.nextElementSibling;
      if(next && next.classList.contains("comment-row")){
        next.remove();
        btn.textContent="+";
        return;
      }
      const td=document.createElement("td");
      td.colSpan=COLS;
      td.innerHTML=`<div>üí¨ ${txt}</div>`;
      const row=document.createElement("tr");
      row.className="comment-row";
      row.appendChild(td);
      tr.insertAdjacentElement("afterend",row);
      btn.textContent="‚àí";
    }

    function renderTable(){
      const matched=data.filter(r=>rowMatches(r));
      const matchedCount=matched.length;
      const frag=document.createDocumentFragment();

      for(const row of matched){
        const tr=document.createElement("tr");
        const comment=row[COLS]||"";
        const tdPlus=document.createElement("td");
        if(comment.trim()!==""){
          const btn=document.createElement("div");
          btn.textContent="+";
          btn.className="plus-btn";
          btn.onclick=()=>toggleCommentRow(tr,comment,btn);
          tdPlus.appendChild(btn);
        } else {
          tdPlus.textContent="";
        }
        tr.appendChild(tdPlus);

        for(let c=0;c<COLS-1;c++){
          const td=document.createElement("td");
          td.innerHTML=highlightText(String(row[c]),c);
          tr.appendChild(td);
        }

        frag.appendChild(tr);
      }

      tbody.innerHTML="";
      tbody.appendChild(frag);
      statusEl.textContent=`Coincidencias: ${matchedCount}`;
    }

    function updateDatalist(col,typed){
      const dl=document.getElementById("dl"+col);
      dl.innerHTML="";
      const counts=new Map();
      for(const row of data){
        if(rowMatches(row,col)){
          const val=String(row[col]);
          counts.set(val,(counts.get(val)||0)+1);
        }
      }
      const options=Array.from(counts.entries()).sort((a,b)=>a[0].localeCompare(b[0]));
      const t=(typed||"").toLowerCase();
      let count=0;
      for(const [val,n] of options){
        if(!typed||val.toLowerCase().includes(t)){
          const opt=document.createElement("option");
          opt.value=val; opt.label=`${val} (${n})`;
          dl.appendChild(opt);
          if(++count>=MAX_SUGGESTIONS) break;
        }
      }
    }

    function updateAllDatalists(except=-1){
      for(let i=0;i<COLS;i++) if(i!==except) updateDatalist(i,inputs[i].value);
    }

    function handleType(col,el){
      const val=(el.value||"").trim();
      filters[col]=val.toLowerCase();
      if(val) el.classList.add("active"); else el.classList.remove("active");
      updateDatalist(col,val); updateAllDatalists(col); renderTable();
    }

    function clearAllFilters(){
      for(let i=0;i<COLS;i++){
        filters[i]=""; inputs[i].value=""; inputs[i].classList.remove("active");
        document.getElementById("dl"+i).innerHTML="";
      }
      renderTable(); updateAllDatalists();
    }

    renderTable(); updateAllDatalists();
  </script>
</body>
</html>