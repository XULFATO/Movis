Sub ExtraerComentariosLimpios()
    Dim fso As Object, folder As Object, file As Object
    Dim txt As String, regex As Object, match As Object
    Dim p As Long, raw As String, elemento As String, comentario As String
    Dim jsonText As String, firstItem As Boolean, nombre As String
    Dim linea1 As String, partes As Variant
    
    ' üìÅ Cambia esta ruta a donde tengas tus .htm
    Const rutaCarpeta As String = "C:\Users\TuUsuario\CarpetaHTML"

    Set fso = CreateObject("Scripting.FileSystemObject")
    Set folder = fso.GetFolder(rutaCarpeta)
    Set regex = CreateObject("VBScript.RegExp")
    regex.IgnoreCase = True
    regex.Global = False
    regex.Pattern = "comentarios\s*a\s*las\s*tablas\s*del\s*vr"

    jsonText = "["
    firstItem = True

    For Each file In folder.Files
        If LCase(fso.GetExtensionName(file.Name)) = "htm" Then
            txt = fso.OpenTextFile(file.Path, 1, False).ReadAll

            If regex.Test(txt) Then
                Set match = regex.Execute(txt)(0)
                p = match.FirstIndex + match.Length + 1
                raw = Mid(txt, p)

                ' üîπ Quitar etiquetas hasta despu√©s del primer <br>
                raw = Replace(raw, vbCrLf, "")
                raw = Replace(raw, "&nbsp;", " ")
                raw = HtmlDecode(raw)

                ' üîπ Obtener la primera l√≠nea (c√≥digo + elemento)
                Dim iBR As Long
                iBR = InStr(1, raw, "<br>", vbTextCompare)
                If iBR > 0 Then
                    linea1 = Trim(Left(raw, iBR - 1))
                    raw = Mid(raw, iBR + 4)
                Else
                    linea1 = ""
                End If

                ' üîπ Separar nombre y elemento (por espacios)
                partes = Split(Trim(linea1))
                If UBound(partes) >= 1 Then
                    nombre = partes(0)
                    elemento = partes(UBound(partes))
                Else
                    nombre = fso.GetBaseName(file.Name)
                    elemento = ""
                End If

                ' üîπ El resto es el comentario
                comentario = CleanHtml(raw)

                ' üîπ Generar JSON
                If Not firstItem Then jsonText = jsonText & "," & vbCrLf
                jsonText = jsonText & _
                    "{""file"":""" & JsonEscape(nombre) & """,""elemento"":""" & JsonEscape(elemento) & """,""comentario"":""" & JsonEscape(comentario) & """}"
                firstItem = False
            End If
        End If
    Next

    jsonText = jsonText & "]"

    ' üì§ Mostrar en hoja de Excel (columna A troceada)
    Dim pos As Long, fila As Long, chunk As String
    pos = 1
    fila = 1
    Do While pos <= Len(jsonText)
        chunk = Mid(jsonText, pos, 30000)
        ThisWorkbook.Sheets(1).Cells(fila, 1).Value = chunk
        pos = pos + 30000
        fila = fila + 1
    Loop

    MsgBox "Listo: JSON limpio y decodificado en columna A (" & fila - 1 & " filas).", vbInformation
End Sub

'------------------ FUNCIONES AUXILIARES ------------------

Private Function HtmlDecode(s As String) As String
    s = Replace(s, "&aacute;", "√°")
    s = Replace(s, "&eacute;", "√©")
    s = Replace(s, "&iacute;", "√≠")
    s = Replace(s, "&oacute;", "√≥")
    s = Replace(s, "&uacute;", "√∫")
    s = Replace(s, "&ntilde;", "√±")
    s = Replace(s, "&Ntilde;", "√ë")
    s = Replace(s, "&amp;", "&")
    s = Replace(s, "&quot;", """")
    s = Replace(s, "&#250;", "√∫")
    s = Replace(s, "&#243;", "√≥")
    s = Replace(s, "&#233;", "√©")
    s = Replace(s, "&#237;", "√≠")
    s = Replace(s, "&#225;", "√°")
    s = Replace(s, "&#241;", "√±")
    HtmlDecode = s
End Function

Private Function CleanHtml(s As String) As String
    Dim re As Object
    Set re = CreateObject("VBScript.RegExp")
    re.Global = True
    re.IgnoreCase = True
    re.Pattern = "<[^>]+>"
    CleanHtml = Trim(re.Replace(s, " "))
End Function

Private Function JsonEscape(s As String) As String
    If IsNull(s) Then s = ""
    s = Replace(s, "\", "\\")
    s = Replace(s, """", "\""")
    s = Replace(s, vbCrLf, "\n")
    s = Replace(s, vbCr, "\n")
    s = Replace(s, vbLf, "\n")
    s = Replace(s, vbTab, "\t")
    JsonEscape = s
End Function